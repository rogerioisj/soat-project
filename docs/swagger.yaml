openapi: 3.0.3
info:
  title: SOAT - Rogerio Inacio
  description: Documentação das APIs para o sistema de lanchonetes
  version: 0.0.1
  contact:
    name: Rogerio Inacio
    email: rogerio.reaper@gmail.com
servers:
  - url: http://127.0.0.1:8080
    description: Local Dev

paths:
  /user:
    post:
      summary: Criar usuário
      description: Retorna informações do usuário baseado no CPF
      tags:
        - Usuários
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - cpf
              properties:
                cpf:
                  type: string
                  example: "12345678900"
                name:
                  type: string
                  example: "João da Silva"
                email:
                  type: string
                  format: email
                  example: teste@teste.com
      responses:
        '201':
          description: Usuário cadastrado com sucesso
        '409':
          description: Usuário com CPF ou/e já cadastrado
        '500':
          description: Internal server error

  /user/{cpf}:
    get:
      summary: Informação do usuário
      description: Retorna informações do usuário baseado no CPF
      tags:
        - Usuários
      parameters:
        - name: CPF
          in: path
          required: true
          description: CPF do usuário
          schema:
            type: string
            example: "12345678900"
      responses:
        '200':
          description: Usuário cadastrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: string
                    example: 1
                  CPF:
                    type: string
                    example: "12345678900"
                  Email:
                    type: string
                    format: email
                    example: "teste@teste.com"
                  Name:
                    type: string
                    example: "João da Silva"
        
        '409':
          description: Usuário com CPF ou/e já cadastrado
        '500':
          description: Internal server error

  /item:
    post:
      summary: Criar item
      description: Cria um novo item no catálogo de produtos
      tags:
        - Itens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
                - description
                - category
              properties:
                name:
                  type: string
                  description: "Nome do produto"
                  example: "Coca-Cola 350ml"
                description:
                  type: string
                  description: "Descrição do produto"
                  example: "Refrigerante de cola, lata de 350ml"
                price:
                  type: number
                  description: "Valor em centavos"
                  format: integer
                  example: 2990
                category:
                  type: string
                  description: "Categoria do produto"
                  enum: [snack, drink, dessert, accompaniment]
                  example: "snack"
      responses:
        '201':
          description: Item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Invalid input data
        '500':
          description: Internal server error

  /itens:
    get:
      summary: Listagem de itens
      description: Recurso de listagem de itens com paginação
      tags:
        - Itens
      parameters:
        - name: category
          in: query
          description: Filtrar itens por categoria
          required: true
          schema:
            type: string
            enum: [snack, drink, dessert, accompaniment]
        - name: page
          in: query
          description: Número da página para paginação
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Itens por página
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Itens retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  itens:
                    type: array
                    items:
                      $ref: '#/components/schemas/Item'
                  total:
                    type: integer
                    example: 50
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 10
        '500':
          description: Internal server error

  /item/{id}:
    put:
      summary: Atualizar item
      description: Atualiza um item existente baseado no ID
      tags:
        - Itens
      parameters:
        - name: id
          in: path
          required: true
          description: Item ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "Nome do produto atualizado"
                  example: "Coca-Cola 350ml"
                description:
                  type: string
                  description: "Descrição do produto atualizado"
                  example: "Lata de refrigerante de cola, 350ml"
                price:
                  type: number
                  description: "Valor em centavos atualizado"
                  format: integer
                  example: 3990
                category:
                  type: string
                  description: "Categoria do produto"
                  enum: [ snack, drink, dessert, accompaniment ]
                  example: "drink"
      responses:
        '200':
          description: Item atualizado com sucessos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '400':
          description: Invalid input data
        '404':
          description: Item not found
        '500':
          description: Internal server error

    delete:
      summary: Excluir item
      description: Exclui um item com base no ID
      tags:
        - Itens
      parameters:
        - name: id
          in: path
          required: true
          description: ID do item
          schema:
            type: integer
      responses:
        '204':
          description: Item deleted successfully
        '404':
          description: Item not found
        '500':
          description: Internal server error

  /order:
    post:
      summary: Criar pedido
      description: Cria um novo pedido
      tags:
        - Pedidos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: "ID do usuário que está fazendo o pedido"
                  example: "1"
                products:
                  type: array
                  description: "Lista de produtos no pedido"
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: "ID do item"
                        example: "1"
                      quantity:
                        type: integer
                        description: "Quantidade do item"
                        example: 2

      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 1
                    description: "ID do pedido criado"
        '400':
          description: Invalid input data
        '500':
          description: Internal server error

  /order/{id}:
    patch:
      summary: Avançar status do pedido
      description: Avança estágio na esteira do pedido
      tags:
        - Pedidos
      parameters:
        - name: id
          in: path
          required: true
          description: ID do pedido
          example: "1"
      responses:
        '204':
          description: Order updated successfully
        '400':
          description: Invalid input data
        '404':
          description: Order not found
        '500':
          description: Internal server error

  /orders:
    get:
      summary: Listar Pedidos
      description: Lista pedidos baseado em paginação
      tags:
        - Pedidos
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of orders per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Ordens listadas com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      properties:
                        id:
                          type: string
                          example: "1"
                          description: "ID do pedido"
                        itens:
                          properties:
                            id:
                              type: string
                              example: "1"
                              description: "ID do pedido"
                            itens:
                                type: array
                                items:
                                  properties:
                                    id:
                                        type: string
                                        example: "1"
                                        description: "ID do item"
                                    name:
                                        type: string
                                        example: "Coca-Cola 350ml"
                                        description: "Nome do item"
                                    price:
                                        type: number
                                        format: integer
                                        example: 2990
                                        description: "Preço do item em centavos"
                  total:
                    type: integer
                    example: 25
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 10
        '500':
          description: Internal server error

components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Nome do produto"
        description:
          type: string
          example: "Descrição do produto"
        price:
            type: number
            format: integer
            example: 2990

    Order:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 1
        status:
          type: string
          enum: [pending, processing, shipped, delivered, cancelled]
          example: "pending"
        total_amount:
          type: number
          format: float
          example: 59.98
        itens:
          type: array
          items:
            type: object
            properties:
              item_id:
                type: integer
                example: 1
              quantity:
                type: integer
                example: 2
              price:
                type: number
                format: float
                example: 29.99
        created_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-15T10:30:00Z"

  responses:
    BadRequest:
      description: Invalid request data
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Invalid input data"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Resource not found"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Internal server error"